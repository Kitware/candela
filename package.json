{
  "name": "candela",
  "version": "0.0.0-semantically-released",
  "description": "Visualization components for the web",
  "main": "index.js",
  "scripts": {
    "build": "npm run build:dev && npm run build:prod",
    "build:dev": "webpack",
    "build:prod": "NODE_ENV=production webpack -p",
    "build:examples": "cd examples; webpack",
    "examples": "http-server build/examples -p ${PORT-3000}",
    "build:test:unit": "cd test; webpack",
    "test:unit": "cd test; karma start --log-level disable | sed \"s/^'\\(.*\\)'$/\\1/\" | tap-spec",
    "test:unit:raw": "cd test; karma start",
    "test:unit:debug": "cd test; karma start --log-level debug",
    "test:image": "npm run test:image:raw | tap-spec",
    "test:image:raw": "result=true; npm run test:image:server:down; npm run test:image:server:up && find plugins/ -name '*.image.js' | xargs -n 1 babel-node || result=false; npm run test:image:server:down; ${result}",
    "test:image:server:up": "sh script/test-server-up.sh >.server.log",
    "test:image:server:down": "sh script/test-server-down.sh",
    "build:test:coverage": "cd test; CANDELA_COVERAGE=1 webpack",
    "test:coverage": "cd test; CANDELA_COVERAGE=1 karma start --log-level disable",
    "test:coverage:report": "http-server build/coverage/html -p ${PORT-3000}",
    "test:coverage:codecov": "cat build/coverage/lcov/lcov.info | codecov",
    "build:resonantlab": "cd app/resonantlab && webpack",
    "build:resonantlab:tests": "webpack --config ./app/resonantlab/webpack-testing.config.js",
    "build:docs": "sphinx-build -a -b html docs/ build/docs/",
    "lint": "semistandard | snazzy",
    "lint:pycandela": "flake8 --config python/pycandela/flake8.cfg python/pycandela",
    "docs": "http-server build/docs -p ${PORT-3000}",
    "commit": "git-cz",
    "semantic-release": "semantic-release",
    "commitmsg": "validate-commit-msg"
  },
  "semistandard": {
    "ignore": [
      "config",
      "dist",
      "build",
      "R/candela/inst/htmlwidgets/lib"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kitware/candela.git"
  },
  "author": "Roni Choudhury",
  "license": "Apache-2.0",
  "dependencies": {
    "UpSet": "git+https://github.com/ronichoudhury-work/upset#candela",
    "babel-cli": "^6.7.5",
    "babel-core": "^6.24.1",
    "babel-istanbul-loader": "^0.1.0",
    "babel-loader": "^7.0.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "bluebird": "^3.3.5",
    "bootstrap": "^3.3.7",
    "bootstrap-webpack": "0.0.6",
    "callsite": "^1.0.0",
    "css-loader": "^0.28.4",
    "d3": "^3.5.17",
    "d3-array": "^1.2.0",
    "d3-scale": "^1.0.6",
    "d3-selection": "^1.1.0",
    "d3-shape": "^1.2.0",
    "d3-transition": "^1.1.0",
    "datalib": "^1.7.3",
    "exports-loader": "^0.6.4",
    "font-awesome-webpack": "0.0.5-beta.2",
    "geojs": "^0.9.1",
    "glo": "github:ronichoudhury-work/glo#dist",
    "html-loader": "^0.4.5",
    "imports-loader": "^0.7.1",
    "jade": "^1.11.0",
    "jade-loader": "^0.8.0",
    "javascript-detect-element-resize": "^0.5.3",
    "jquery": "^3.3.1",
    "json-loader": "^0.5.4",
    "less": "^2.7.2",
    "lineupjs": "^1.1.1",
    "md5": "^2.2.1",
    "node-sass": "^4.5.3",
    "nvd3": "^1.8.5",
    "onset": "git+https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754",
    "raw-loader": "^0.5.1",
    "sass-loader": "^6.0.5",
    "sententree": "git+https://git@github.com/ronichoudhury-work/sententree.git#fix-typo",
    "style-loader": "^0.18.1",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.1",
    "telegraph-events": "^1.0.3",
    "underscore": "^1.8.3",
    "url-loader": "^0.5.8",
    "vega": "^3.0.0-rc1",
    "vega-lite": "^2.0.0-beta.8",
    "vega-schema-url-parser": "^1.0.0-beta.2",
    "vega-tooltip": "^0.4.2",
    "webcola": "^3.3.3"
  },
  "devDependencies": {
    "codecov.io": "^0.1.6",
    "commitizen": "^2.8.6",
    "condition-circle": "^2.0.1",
    "conventional-commit-types": "^2.1.0",
    "cz-conventional-changelog": "^1.2.0",
    "html-webpack-plugin": "^2.28.0",
    "http-server": "^0.11.1",
    "husky": "^0.11.8",
    "istanbul-instrumenter-loader": "^2.0.0",
    "karma": "^1.7.0",
    "karma-coverage-istanbul-reporter": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-quiet-reporter": "^0.1.2",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-tap": "^1.0.4",
    "karma-webpack": "^1.7.0",
    "nightmare": "^2.10.0",
    "node-resemble": "^1.1.3",
    "semantic-release": "^12.4.1",
    "semistandard": "^7.0.5",
    "snazzy": "^4.0.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.3",
    "tape-catch": "^1.0.6",
    "validate-commit-msg": "^2.8.2",
    "webpack": "^3.0.0"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "validate-commit-msg": {
      "helpMessage": "This project is commitizen-friendly.\nLearn more at https://commitizen.github.io/cz-cli/https://commitizen.github.io/cz-cli/\nTo try again, you can say \"git commit -t .git/COMMIT_EDITMSG\".\nOr, you can use git-cz to make your commits."
    }
  },
  "release": {
    "verifyConditions": "condition-circle"
  }
}
